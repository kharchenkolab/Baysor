var documenterSearchIndex = {"docs":
[{"location":"segfree/#Segmentation-free-analysis","page":"Segmentation-free analysis","title":"Segmentation-free analysis","text":"","category":"section"},{"location":"segfree/","page":"Segmentation-free analysis","title":"Segmentation-free analysis","text":"Many analyses don't require segmentation, and can be run on local neighborhoods instead. In the paper, we call them Neighborhood Composition Vectors (NCVs). To obtain them from Baysor, you may run baysor segfree. This would output a loom file with NCVs of size k in (/matrix), storing ncv_color and confidence as column attributes (/col_attrs/).","category":"page"},{"location":"segfree/","page":"Segmentation-free analysis","title":"Segmentation-free analysis","text":"baysor segfree <args> [options]","category":"page"},{"location":"segfree/","page":"Segmentation-free analysis","title":"Segmentation-free analysis","text":"CLI parameters:","category":"page"},{"location":"segfree/","page":"Segmentation-free analysis","title":"Segmentation-free analysis","text":"Baysor.CLI.segfree","category":"page"},{"location":"segfree/#Baysor.CommandLine.segfree","page":"Segmentation-free analysis","title":"Baysor.CommandLine.segfree","text":"Extract Neighborhood Composition Vectors (NCVs) from a dataset\n\nArgs\n\ncoordinates:            CSV or Parquet file with coordinates of molecules and gene type\n\nOptions\n\n-k, --k-neighbors=<k>:              Number of neighbors for segmentation-free pseudo-cells. It's suggested to set it to the expected minimal number of molecules per cell. (default: inferred from min-molecules-per-cell)\n-c, --config=<config.toml>:         TOML file with a config. The function only uses the [data] and [plotting] sections.\n-x, --x-column=<x>:                 Name of x column. Overrides the config value.\n-y, --y-column=<y>:                 Name of y column. Overrides the config value.\n-z, --z-column=<z>:                 Name of z column. Overrides the config value.\n-g, --gene-column=<gene>:           Name of gene column. Overrides the config value.\n-m, --min-molecules-per-cell=<m>:   Minimal number of molecules for a cell to be considered as real.                                       It's an important parameter, as it's used to infer several other parameters.                                       Overrides the config value.\n-o, --output=<path>:                Name of the output file or path to the output directory (default: \"ncvs.loom\")\n\n\n\n\n\n","category":"function"},{"location":"citation/#Citation","page":"Citation info","title":"Citation","text":"","category":"section"},{"location":"citation/","page":"Citation info","title":"Citation info","text":"If you find Baysor useful for your publication, please cite:","category":"page"},{"location":"citation/","page":"Citation info","title":"Citation info","text":"Petukhov V, Xu RJ, Soldatov RA, Cadinu P, Khodosevich K, Moffitt JR & Kharchenko PV.\nCell segmentation in imaging-based spatial transcriptomics.\nNat Biotechnol (2021). https://doi.org/10.1038/s41587-021-01044-w","category":"page"},{"location":"run/","page":"Summary","title":"Summary","text":"Baysor can be used in several ways:","category":"page"},{"location":"run/#Cell-segmentation","page":"Summary","title":"Cell segmentation","text":"","category":"section"},{"location":"run/","page":"Summary","title":"Summary","text":"A minimal command for cell segmentation:","category":"page"},{"location":"run/","page":"Summary","title":"Summary","text":"baysor run [-s SCALE -x X_COL -y Y_COL -z Z_COL --gene GENE_COL -c config.toml -o OUTPUT_PATH] MOLECULES_FILE [PRIOR_SEGMENTATION]","category":"page"},{"location":"run/#Dataset-preview","page":"Summary","title":"Dataset preview","text":"","category":"section"},{"location":"run/","page":"Summary","title":"Summary","text":"As a full run takes some time, it can be useful to run a quick preview to get meaning from the data and to get some guesses about the parameters of the full run.","category":"page"},{"location":"run/","page":"Summary","title":"Summary","text":"baysor preview [-x X_COL -y Y_COL --gene GENE_COL -c config.toml -o OUTPUT_PATH] MOLECULES_FILE","category":"page"},{"location":"run/#Segmentation-free-analysis","page":"Summary","title":"Segmentation-free analysis","text":"","category":"section"},{"location":"run/","page":"Summary","title":"Summary","text":"Many analyses don't require segmentation, and can be run on local neighborhoods instead. In the paper, we call them Neighborhood Composition Vectors (NCVs). To obtain them from Baysor, you may run baysor segfree. For more information, see baysor segfree --help. Minimal command:","category":"page"},{"location":"run/","page":"Summary","title":"Summary","text":"baysor segfree [-k K_NEIGHBORS -x X_COL -y Y_COL --gene GENE_COL -c config.toml -o OUTPUT_PATH] MOLECULES_FILE","category":"page"},{"location":"examples/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"For examples of segmentation on different protocols, see the examples folder:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"STARmap\nISS\nosm-FISH","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Also, configs folder can be helpful. Particularly, it has the config, which works for most of the Xenium datasets.","category":"page"},{"location":"segmentation/#Segmentation","page":"Cell segmentation","title":"Segmentation","text":"","category":"section"},{"location":"segmentation/#Normal-run","page":"Cell segmentation","title":"Normal run","text":"","category":"section"},{"location":"segmentation/","page":"Cell segmentation","title":"Cell segmentation","text":"To run the algorithm on your data, use the following command:","category":"page"},{"location":"segmentation/","page":"Cell segmentation","title":"Cell segmentation","text":"baysor run <args> [options] [flags]","category":"page"},{"location":"segmentation/","page":"Cell segmentation","title":"Cell segmentation","text":"CLI parameters:","category":"page"},{"location":"segmentation/","page":"Cell segmentation","title":"Cell segmentation","text":"Baysor.CLI.run","category":"page"},{"location":"segmentation/#Baysor.CommandLine.run","page":"Cell segmentation","title":"Baysor.CommandLine.run","text":"Run cell segmentation\n\nArgs\n\ncoordinates:            CSV or Parquet file with coordinates of molecules and gene type\nprior_segmentation:     Image or a MAT file with segmentation mask (either boolean or component indexing) or coordinates                           column with segmentation labels.                           If it's a column name, it should be preceded by ':' symbol (e.g. :cell)\n\nOptions\n\n-c, --config=<config.toml>:         TOML file with a config\n-x, --x-column=<x>:                 Name of x column. Overrides the config value.\n-y, --y-column=<y>:                 Name of y column. Overrides the config value.\n-z, --z-column=<z>:                 Name of z column. Overrides the config value.\n-g, --gene-column=<gene>:           Name of gene column. Overrides the config value.\n-m, --min-molecules-per-cell=<m>:   Minimal number of molecules for a cell to be considered as real.                                       It's an important parameter, as it's used to infer several other parameters.                                       Overrides the config value.\n--n-clusters=<nc>:                  Number of molecule clusters, i.e. major cell types. Depends on protocol resolution,                                       but should not be too high. In most cases something between 3 and 15 should work well.                                       (default: 4)\n-o, --output=<path>:                Name of the output file or path to the output directory (default: \"segmentation.csv\")\n--polygon-format=<format>:          Format to save estimated cell boundary polygons to a file with a specified format.                                       Two main types of 'GeoJSON' format are currently supported: 'FeatureCollection' produces the                                       same output as Xenium Ranger and 'GeometryCollection' is the old Baysor format. Additionally,                                       GeometryCollectionLegacy format is similar to GeometryCollection, but with integer cell IDs                                       (used for compatibility with Xenium Ranger, this option will be deprecated after Xenium Ranger                                       is updated). Set to \"none\" to disable saving polygons. (default: 'FeatureCollection').\n--scale-std=<ss>:                   Standard deviation of scale across cells. Can be either number, which means absolute value of                                       the std, or string ended with '%' to set it relative to scale (default: \"25%\")\n-s, --scale=<s>:                    Scale parameter, which suggest approximate cell radius for the algorithm. Must be in the same                                       units as x and y molecule coordinates. Overrides the config value.                                       Sets estimate-scale-from-centers to false.\n--prior-segmentation-confidence=<p>:    Confidence of the prior_segmentation results. Value in [0; 1].                                           If you want the final segmentation not contradicting to prior_segmentation, set it to 1.                                           Otherwise, if you assume errors in prior_segmentation, values in [0.2-0.7] allow                                           flexibility for the algorithm. (default: 0.2)\n--count-matrix-format=<format>:     Storage format of the segmentec cell count matrix. Either 'loom' or 'tsv' (default: 'loom')\n\nFlags\n\n-p, --plot:             Save an HTML with the plot of the segmentation\n\n\n\n\n\n","category":"function"},{"location":"segmentation/","page":"Cell segmentation","title":"Cell segmentation","text":"For the description of all config parameters, see example_config.toml.","category":"page"},{"location":"segmentation/#Using-a-prior-segmentation","page":"Cell segmentation","title":"Using a prior segmentation","text":"","category":"section"},{"location":"segmentation/","page":"Cell segmentation","title":"Cell segmentation","text":"In some cases, you may want to use another segmentation as a prior for Baysor. The most popular case is having a segmentation based on DAPI/poly-A stainings: such information helps to understand where nuclei are positioned, but it's often quite imprecise. To take this segmentation into account you can pass it as the second positional argument to Baysor:","category":"page"},{"location":"segmentation/","page":"Cell segmentation","title":"Cell segmentation","text":"baysor run [ARGS] MOLECULES_FILE [PRIOR_SEGMENTATION]","category":"page"},{"location":"segmentation/","page":"Cell segmentation","title":"Cell segmentation","text":"Here, PRIOR_SEGMENTATION can be a path to a binary image with a segmentation mask, an image with integer cell segmentation labels or a column name in the MOLECULES_FILE with integer cell assignment per molecule (0 value means no assignment). In the latter case, the column name must have : prefix, e.g. for column cell you should use baysor run [ARGS] molecules.csv :cell. In case the image is too big to be stored in the tiff format, Baysor supports MATLAB '.mat' format: it should contain a single field with an integer matrix for either a binary mask or segmentation labels. When loading the segmentation, Baysor filters segments that have less than min-molecules-per-segment molecules. It can be set in the toml config, and the default value is min-molecules-per-segment = min-molecules-per-cell / 4. Note: only CSV column prior is currently supported for 3D segmentation.","category":"page"},{"location":"segmentation/","page":"Cell segmentation","title":"Cell segmentation","text":"To specify the expected quality of the prior segmentation you may use prior-segmentation-confidence parameter. The value 0.0 makes the algorithm ignore the prior, while the value 1.0 restricts the algorithm from contradicting the prior. Prior segmentation is mainly needed for the cases where gene expression signal is not enough, e.g. with very sparse protocols (such as ISS or DARTFISH). Another potential use case is high-quality data with a visible sub-cellular structure. In these situations, setting prior-segmentation-confidence > 0.7 is recommended. Otherwise, the default value 0.2 should work well.","category":"page"},{"location":"segmentation/#Segmenting-stains","page":"Cell segmentation","title":"Segmenting stains","text":"","category":"section"},{"location":"segmentation/","page":"Cell segmentation","title":"Cell segmentation","text":"If you have a non-segmented DAPI image, the simplest way to segment it would go through the following steps ImageJ:","category":"page"},{"location":"segmentation/","page":"Cell segmentation","title":"Cell segmentation","text":"Open the image (File -> Open)\nGo to Image -> Type and pick \"8-bit\"\nRun Process -> Filters -> Gaussian Blur, using Sigma = 1.0. The value can vary, depending on your DAPI, but 1.0 generally works fine.\nRun Image -> Adjust -> Auto Threshold, using Method = Default. Different methods can give the best results for different cases. Often \"Mean\" also works well.\nRun Process -> Binary -> Watershed\nSave the resulting image in the .tif","category":"page"},{"location":"segmentation/","page":"Cell segmentation","title":"Cell segmentation","text":"Another promising tool is CellPose, however, it may require some manual labeling to fine-tune the network.","category":"page"},{"location":"segmentation/#Segmenting-cells-with-pronounced-intracellular-structure","page":"Cell segmentation","title":"Segmenting cells with pronounced intracellular structure","text":"","category":"section"},{"location":"segmentation/","page":"Cell segmentation","title":"Cell segmentation","text":"High-resolution protocols, such as MERFISH or seq-FISH, can capture the intracellular structure. Most often, it would mean a pronounced difference between nuclear and cytoplasmic gene composition. By default, such differences would push Baysor to recognize compartments as different cells. However, if some compartment-specific genes are known, they may be used to mitigate the situation. These genes can be specified through --config.segmentation.nuclei-genes and --config.segmentation.cyto-genes options, e.g.:","category":"page"},{"location":"segmentation/","page":"Cell segmentation","title":"Cell segmentation","text":"baysor run -m 30 --n-clusters=1 -s 30 --scale-std=50% --config.segmentation.nuclei-genes=Neat1 --config.segmentation.cyto-genes=Apob,Net1,Slc5a1,Mptx2 --config.data.exclude-genes='Blank*' ./molecules.csv","category":"page"},{"location":"segmentation/","page":"Cell segmentation","title":"Cell segmentation","text":"Please, notice that it's highly recommended to set --n-clusters=1, so molecule clustering would not be affected by compartment differences.","category":"page"},{"location":"segmentation/","page":"Cell segmentation","title":"Cell segmentation","text":"Note. Currently, there is no automated way to determine such compartment-specific genes. So, the only way we can suggest is interactive explaration of data. In theory, it should be straightforward to infer such information from DAPI and poly-A stains, however, it is not implemented yet. If you have a particular need for such functionality, please submit an issue with the description of your experimental setup.","category":"page"},{"location":"segmentation/#Outputs","page":"Cell segmentation","title":"Outputs","text":"","category":"section"},{"location":"segmentation/#Segmentation-results","page":"Cell segmentation","title":"Segmentation results","text":"","category":"section"},{"location":"segmentation/","page":"Cell segmentation","title":"Cell segmentation","text":"segmentation_counts.loom or segmentation_counts.tsv (depends on --count-matrix-format): count matrix with segmented stats. In the case of loom format, column attributes also contain the same info as segmentation_cell_stats.csv.\nsegmentation.csv: segmentation info per molecule:\nconfidence: probability of a molecule to be real (i.e. not noise)\ncell: id of the assigned cell. Value \"\" corresponds to noise.\ncluster: id of the molecule cluster\nassignment_confidence: confidence that the molecule is assigned to a correct cell\nis_noise: shows whether molecule was assigned to noise (it equals true if and only if cell == \"\")\nncv_color: RGB code of the neighborhood composition coloring\nsegmentation_cell_stats.csv: diagnostic info about cells. The following parameters can be used to filter low-quality cells:\narea: area of the convex hull around the cell molecules\navg_confidence: average confidence of the cell molecules\ndensity: the number of molecules in a cell divided by the cell area\nelongation: ratio of the two eigenvalues of the cell covariance matrix\nn_transcripts: number of molecules per cell\navg_assignment_confidence: average assignment confidence per cell. Cells with low avg_assignment_confidence have a much higher chance of being an artifact.\nmax_cluster_frac (only if n-clusters > 1): fraction of the molecules coming from the most popular cluster. Cells with low max_cluster_frac are often doublets.\nlifespan: number of iterations the given component exists. The maximal lifespan is clipped proportionally to the total number of iterations. Components with a short lifespan likely correspond to noise.","category":"page"},{"location":"segmentation/#Visualization","page":"Cell segmentation","title":"Visualization","text":"","category":"section"},{"location":"segmentation/","page":"Cell segmentation","title":"Cell segmentation","text":"segmentation_polygons_2d/3d.json: polygons used for visualization in GeoJSON format. In the case of 3D segmentation, 2d.json file contains polygons for all molecules pulled across the z-stack. And 3D shows polygons per z-slice. In case of continuous z, it's binned into 20 uniform bins. Depending on the format, it can contain GeometryCollection or FeatureCollection:\nFor 3D, the file contains an array of dictionaries (one per z-slice), each of which representing a Collection. For 2D data it's just a single dictionary with a Collection.\nEach GeometryCollection has a field geometries, which is an array of polygons with cell field set to cell ids and coordinates set to its coordinates.\nFeatureCollection is the format, compatible with 10x SpaceRanger. It contains a list of Features with cell ids saved in the id field and coordinates in geometry/coordinates.\nsegmentation_diagnostics.html: visualization of the algorithm QC. Shown only when -p is set.\nsegmentation_borders.html: visualization of cell borders for the dataset colored by local gene expression composition (first part) and molecule clusters (second part). Shown only when -p is set.","category":"page"},{"location":"segmentation/#Other","page":"Cell segmentation","title":"Other","text":"","category":"section"},{"location":"segmentation/","page":"Cell segmentation","title":"Cell segmentation","text":"segmentation_params.dump.toml: aggregated parameters from the config and CLI","category":"page"},{"location":"segmentation/#Choice-of-parameters","page":"Cell segmentation","title":"Choice of parameters","text":"","category":"section"},{"location":"segmentation/","page":"Cell segmentation","title":"Cell segmentation","text":"Most important parameters:","category":"page"},{"location":"segmentation/","page":"Cell segmentation","title":"Cell segmentation","text":"scale is the most sensitive parameter, which specifies the expected radius of a cell. It doesn't have to be precise, but the wrong setup can lead to over- or under-segmentation. This parameter is inferred automatically if cell centers are provided.\nmin-molecules-per-cell is the number of molecules, required for a cell to be considered as real. It really depends on the protocol. For instance, for ISS it's fine to set it to 3, while for MERFISH it can require hundreds of molecules.","category":"page"},{"location":"segmentation/","page":"Cell segmentation","title":"Cell segmentation","text":"Run parameters:","category":"page"},{"location":"segmentation/","page":"Cell segmentation","title":"Cell segmentation","text":"--config.segmentation.n-cells-init expected number of cells in data. This parameter influences the convergence speed of the algorithm, as well as peak memory usage. Setting this value too small would lead to under-segmentation.\n--config.segmentation.iters number of iterations for the algorithm. At the moment, no convergence criteria are implemented, so it will work exactly iters iterations. Thus, too small values would lead to non-convergence of the algorithm, while larger ones would just increase working time. Optimal values can be estimated by the convergence plots in the diagnostics report.","category":"page"},{"location":"installation/#Installation","page":"Installation","title":"Installation","text":"","category":"section"},{"location":"installation/","page":"Installation","title":"Installation","text":"There are several ways to install the package.","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"Pages = [\"installation.md\"]","category":"page"},{"location":"installation/#Linux-binary-download","page":"Installation","title":"Linux binary download","text":"","category":"section"},{"location":"installation/","page":"Installation","title":"Installation","text":"The easiest way to install Baysor on Linux is to download a binary from the release section (see Assets). There, you can use bin/baysor executable. For other platforms, \"Install as a Julia package\" is a recommended way. If you know how to reliably compile binaries for MacOS or Windows, please, let me know in issues or over email!","category":"page"},{"location":"installation/#Install-as-a-Julia-package","page":"Installation","title":"Install as a Julia package","text":"","category":"section"},{"location":"installation/","page":"Installation","title":"Installation","text":"If you need to install julia, juliaup is a recommended way. It's cross-platform and doesn't require admin privileges. TL;DR: curl -fsSL https://install.julialang.org | sh .","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"The current version of Baysor isn't compatible with Julia 1.11.","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"To install Julia 1.10, use the following command:","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"juliaup add 1.10\njuliaup default 1.10","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"To install Baysor as a Julia package run the following command from your CLI (it requires gcc or clang installed):","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"julia -e 'using Pkg; Pkg.add(PackageSpec(url=\"https://github.com/kharchenkolab/Baysor.git\")); Pkg.build()'","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"It will install all dependencies, compile the package and create an executable in ~/.julia/bin/baysor. This executable can be moved to any other place if you need it.","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"The same command can be used to update the package to the latest version.","category":"page"},{"location":"installation/#Installing-other-versions","page":"Installation","title":"Installing other versions","text":"","category":"section"},{"location":"installation/","page":"Installation","title":"Installation","text":"To install development version, use Pkg.add(PackageSpec(url=\"https://github.com/kharchenkolab/Baysor.git\", rev=\"develop\")):","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"julia -e 'using Pkg; Pkg.add(PackageSpec(url=\"https://github.com/kharchenkolab/Baysor.git\", rev=\"develop\")); Pkg.build()'","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"Other versions may be similarly installed by passing the version to the rev parameter (e.g., rev=\"v0.5.2\").","category":"page"},{"location":"installation/#Docker","page":"Installation","title":"Docker","text":"","category":"section"},{"location":"installation/","page":"Installation","title":"Installation","text":"Alternatively, you can use Docker. It contains executable baysor to run Baysor from CLI, as well as IJulia installation to use Baysor with Jupyter. The repo also has images for older versions.","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"docker run -it --rm vpetukhov/baysor:latest","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"Build by hands:","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"docker pull julia:latest\ncd Baysor/docker\ndocker build .","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"You can find more info about dockers at Docker Cheat Sheet.","category":"page"},{"location":"preview/#Preview","page":"Preview","title":"Preview","text":"","category":"section"},{"location":"preview/","page":"Preview","title":"Preview","text":"As a full run takes some time, it can be useful to run a quick preview to get meaning from the data and to get some guesses about the parameters of the full run. The only output of this step is preview.html, which visualizes the dataset and provides some diagnostics. Be careful, as this can get too large to be rendered for large datasets, so it's better to run on a subset of the data.","category":"page"},{"location":"preview/","page":"Preview","title":"Preview","text":"baysor preview <args> [options]","category":"page"},{"location":"preview/","page":"Preview","title":"Preview","text":"CLI parameters:","category":"page"},{"location":"preview/","page":"Preview","title":"Preview","text":"Baysor.CLI.preview","category":"page"},{"location":"preview/#Baysor.CommandLine.preview","page":"Preview","title":"Baysor.CommandLine.preview","text":"Plot an html with the dataset preview.\n\nArgs\n\ncoordinates:            CSV or Parquet file with coordinates of molecules and gene type\n\nOptions\n\n-c, --config=<config.toml>:         TOML file with a config. The function uses [data] and [plotting] sections.\n-x, --x-column=<x>:                 Name of x column. Overrides the config value.\n-y, --y-column=<y>:                 Name of y column. Overrides the config value.\n-z, --z-column=<z>:                 Name of z column. Overrides the config value.\n-g, --gene-column=<gene>:           Name of gene column. Overrides the config value.\n-m, --min-molecules-per-cell=<m>:   Minimal number of molecules for a cell to be considered as real.                                       It's an important parameter, as it's used to infer several other parameters.                                       Overrides the config value.\n-o, --output=<path>:                Name of the output file or path to the output directory (default: \"preview.html\")\n\n\n\n\n\n","category":"function"},{"location":"configuration/#Advanced-configuration","page":"Advanced configuration","title":"Advanced configuration","text":"","category":"section"},{"location":"configuration/","page":"Advanced configuration","title":"Advanced configuration","text":"The pipeline options are described in the CLI help. Run baysor --help or the corresponding command like baysor run --help for the list of main options.","category":"page"},{"location":"configuration/","page":"Advanced configuration","title":"Advanced configuration","text":"However, there are additional parameters that can be specified through the TOML config. See example_config.toml for their description. All parameters from the config can also be passed through the command line. For example, to set exclude_genes from the data section you need to pass --config.data.exclude-genes='Blank*,MALAT1' parameter. Please, keep in mind that the CLI parameters require replacing all underscores (_) with -.","category":"page"},{"location":"configuration/","page":"Advanced configuration","title":"Advanced configuration","text":"For more details on the syntax for CLI arguments, see the Comonicon documentation. TL;DR, possible spelling options are: --x-column X or -x X, also --x-column=X or -xX. And if you're using strings with unusual symbols like * or ?, it's better to have them in quotes: --config.data.exclude-genes='Blank*'.","category":"page"},{"location":"configuration/#Multi-threading","page":"Advanced configuration","title":"Multi-threading","text":"","category":"section"},{"location":"configuration/","page":"Advanced configuration","title":"Advanced configuration","text":"All running options support some basic multi-threading. To enable it, set JULIA_NUM_THREADS environment variable before running the script You can either do it globally by running export JULIA_NUM_THREADS=13 or for an individual command:","category":"page"},{"location":"configuration/","page":"Advanced configuration","title":"Advanced configuration","text":"JULIA_NUM_THREADS=13 baysor run -m 30 -s 30 ./molecules.csv","category":"page"},{"location":"configuration/","page":"Advanced configuration","title":"Advanced configuration","text":"The latest julia version is recommended, as multi-threading is being actively developed in julia.","category":"page"},{"location":"#Baysor-Documentation","page":"Home","title":"Baysor Documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Baysor is a tool for performing cell segmentation on imaging-based spatial transcriptomics data. It optimizes segmentation considering the likelihood of transcriptional composition, size and shape of the cell. The approach can take into account nuclear or cytoplasm staining, however, can also perform segmentation based on the detected molecules alone. The details of the method are described in the paper, or pre-print (old version of the text). To reproduce the analysis from the paper see BaysorAnalysis repo.","category":"page"},{"location":"","page":"Home","title":"Home","text":"See the 16-min live-demo of Baysor for an overview of the workflow! Also, here is my 2023 video with the paper presentation and some updates on the ideas.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Do you have any question? Start a discussion!","category":"page"},{"location":"#Citing","page":"Home","title":"Citing","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"If you find Baysor useful for your publication, please cite:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Petukhov V, Xu RJ, Soldatov RA, Cadinu P, Khodosevich K, Moffitt JR & Kharchenko PV.\nCell segmentation in imaging-based spatial transcriptomics.\nNat Biotechnol (2021). https://doi.org/10.1038/s41587-021-01044-w","category":"page"}]
}
